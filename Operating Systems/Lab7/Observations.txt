Nicholas Freeman
Lab 7 Writup

	After setting up the minix machine, the first part of this lab consisted of trying to find the section of code that I specifically needed to alter in order to complete the lab objective. This was actually difficult at first, as I wasn't sure exactly where minix processing tasks were scheduled; however, after looking at the lab document again I felt compelled to do a search within the minix machine looking for "proc." I was told that the file 
would be withing "/usr/src" but I wasn't quite sure where. After the grep command failed to search this directory--returning the error "core dumped"--I refined my search to the "/usr/src/kernel" directory, as I figured any process management software would be held within the kernel. I found a couple of files labled "proc.h" and "proc.c" and copied them into my original system using the ftp commands within the mate terminal. 
	The next part of the lab was more difficult, as I noticed the "pick_proc" function within the "proc.c" file that I would have to alter in order to change minix's process choosing algorithm. After spending some time trying to wrap my head around exactly what I was looking at, I took some time to try and effectively change the code. At first, I thought I might be able to adapt the "random_process" function for my own purposes, but I quickly abandoned this idea. My solution was to create a few more integer values and craftily create a simple "if" block to give a random chance of the minix system using a lower priority queue for it's processing schedule. I thought about giving it a 1 in 5 chance, but noticed many of my peers had Operating Systems that were functioning extremely slowly if they gave it less than a 1 in 10 chance. Naturally, I gave the Minix system a 1 out of 10 chance of choosing a randomly selected lower priority queue, which did slow down the system rather significantly. The second if block I created was simply the a slightly modified version of an "if" block that the original Minix developers wrote, making sure that if the queue was empty that the next process to run would return to the original systems picking process.
	I sent this modified proc.c file back into the minix system using FTP and recompiled and rebooted my minix system quickly thereafter. I noticed that the system was operating reasonably slower than it originally did.

